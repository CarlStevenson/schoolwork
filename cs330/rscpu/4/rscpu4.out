Username:  stevenc
Date:      Mon Mar 16 20:55:04 EDT 2015
 
*** compiling ***
--- running ---
 

Carl Stevenson
RSCPU
This program accepts the title of a file from the
user, opens the file, then reads in lines of 
hexadecimal bytes, and executes them in the 
simulated CPU.

Enter the name of the file containing the program: 
You chose: /home/mathcs/turnin/bracken/cs330/test1.1

Initial register values: 
Current Data: AC = 0, R = 0, ZCVN = 0000, AR = 0, PC = 0, DR = 0
	IR = 0, TR = 0

fetch1: AR = 0 and PC = 0
fetch2: DR = 0 and PC = 1
fetch3: IR = 0 and AR = 1
no op instruction
Current Data: AC = 0, R = 0, ZCVN = 0000, AR = 1, PC = 1, DR = 0
fetch1: AR = 1 and PC = 1
fetch2: DR = 255 and PC = 2
fetch3: IR = 255 and AR = 2
halt instruction
Current Data: AC = 0, R = 0, ZCVN = 0000, AR = 2, PC = 2, DR = 255
--- Running again ---
 

Carl Stevenson
RSCPU
This program accepts the title of a file from the
user, opens the file, then reads in lines of 
hexadecimal bytes, and executes them in the 
simulated CPU.

Enter the name of the file containing the program: 
You chose: /home/mathcs/turnin/bracken/cs330/test2.1

Initial register values: 
Current Data: AC = 0, R = 0, ZCVN = 0000, AR = 0, PC = 0, DR = 0
	IR = 0, TR = 0

fetch1: AR = 0 and PC = 0
fetch2: DR = 11 and PC = 1
fetch3: IR = 11 and AR = 1
clac instruction
clac1 AC = 0 ZCVN = 1000
Current Data: AC = 0, R = 0, ZCVN = 1000, AR = 1, PC = 1, DR = 11
fetch1: AR = 1 and PC = 1
fetch2: DR = 3 and PC = 2
fetch3: IR = 3 and AR = 2
mvac instruction
mvac1 R = 0
Current Data: AC = 0, R = 0, ZCVN = 1000, AR = 2, PC = 2, DR = 3
fetch1: AR = 2 and PC = 2
fetch2: DR = 10 and PC = 3
fetch3: IR = 10 and AR = 3
inac instruction
inac1 AC = 1 ZCVN = 0000
Current Data: AC = 1, R = 0, ZCVN = 0000, AR = 3, PC = 3, DR = 10
fetch1: AR = 3 and PC = 3
fetch2: DR = 3 and PC = 4
fetch3: IR = 3 and AR = 4
mvac instruction
mvac1 R = 1
Current Data: AC = 1, R = 1, ZCVN = 0000, AR = 4, PC = 4, DR = 3
fetch1: AR = 4 and PC = 4
fetch2: DR = 10 and PC = 5
fetch3: IR = 10 and AR = 5
inac instruction
inac1 AC = 2 ZCVN = 0000
Current Data: AC = 2, R = 1, ZCVN = 0000, AR = 5, PC = 5, DR = 10
fetch1: AR = 5 and PC = 5
fetch2: DR = 4 and PC = 6
fetch3: IR = 4 and AR = 6
movr instruction
movr1 AC = 1
Current Data: AC = 1, R = 1, ZCVN = 0000, AR = 6, PC = 6, DR = 4
fetch1: AR = 6 and PC = 6
fetch2: DR = 255 and PC = 7
fetch3: IR = 255 and AR = 7
halt instruction
Current Data: AC = 1, R = 1, ZCVN = 0000, AR = 7, PC = 7, DR = 255
--- Running again ---
 

Carl Stevenson
RSCPU
This program accepts the title of a file from the
user, opens the file, then reads in lines of 
hexadecimal bytes, and executes them in the 
simulated CPU.

Enter the name of the file containing the program: 
You chose: /home/mathcs/turnin/bracken/cs330/test3.2

Initial register values: 
Current Data: AC = 0, R = 0, ZCVN = 0000, AR = 0, PC = 0, DR = 0
	IR = 0, TR = 0

fetch1: AR = 0 and PC = 0
fetch2: DR = 1 and PC = 1
fetch3: IR = 1 and AR = 1
ldac instruction
ldac1 AR = 2 PC = 2 DR = 0
ldac2 AR = 2 PC = 3 DR = 7 TR = 0
ldac3 AR = 7
ldac4 DR = 127
ldac5 AC = 127
Current Data: AC = 127, R = 0, ZCVN = 0000, AR = 7, PC = 3, DR = 127
fetch1: AR = 3 and PC = 3
fetch2: DR = 10 and PC = 4
fetch3: IR = 10 and AR = 4
inac instruction
inac1 AC = -128 ZCVN = 0011
Current Data: AC = -128, R = 0, ZCVN = 0011, AR = 4, PC = 4, DR = 10
fetch1: AR = 4 and PC = 4
fetch2: DR = 3 and PC = 5
fetch3: IR = 3 and AR = 5
mvac instruction
mvac1 R = -128
Current Data: AC = -128, R = -128, ZCVN = 0011, AR = 5, PC = 5, DR = 3
fetch1: AR = 5 and PC = 5
fetch2: DR = 0 and PC = 6
fetch3: IR = 0 and AR = 6
no op instruction
Current Data: AC = -128, R = -128, ZCVN = 0011, AR = 6, PC = 6, DR = 0
fetch1: AR = 6 and PC = 6
fetch2: DR = 255 and PC = 7
fetch3: IR = 255 and AR = 7
halt instruction
Current Data: AC = -128, R = -128, ZCVN = 0011, AR = 7, PC = 7, DR = 255
--- Running again ---
 

Carl Stevenson
RSCPU
This program accepts the title of a file from the
user, opens the file, then reads in lines of 
hexadecimal bytes, and executes them in the 
simulated CPU.

Enter the name of the file containing the program: 
You chose: /home/mathcs/turnin/bracken/cs330/test3.3

Initial register values: 
Current Data: AC = 0, R = 0, ZCVN = 0000, AR = 0, PC = 0, DR = 0
	IR = 0, TR = 0

fetch1: AR = 0 and PC = 0
fetch2: DR = 1 and PC = 1
fetch3: IR = 1 and AR = 1
ldac instruction
ldac1 AR = 2 PC = 2 DR = 0
ldac2 AR = 2 PC = 3 DR = 9 TR = 0
ldac3 AR = 9
ldac4 DR = 254
ldac5 AC = -2
Current Data: AC = -2, R = 0, ZCVN = 0000, AR = 9, PC = 3, DR = 254
fetch1: AR = 3 and PC = 3
fetch2: DR = 10 and PC = 4
fetch3: IR = 10 and AR = 4
inac instruction
inac1 AC = -1 ZCVN = 0001
Current Data: AC = -1, R = 0, ZCVN = 0001, AR = 4, PC = 4, DR = 10
fetch1: AR = 4 and PC = 4
fetch2: DR = 3 and PC = 5
fetch3: IR = 3 and AR = 5
mvac instruction
mvac1 R = -1
Current Data: AC = -1, R = -1, ZCVN = 0001, AR = 5, PC = 5, DR = 3
fetch1: AR = 5 and PC = 5
fetch2: DR = 2 and PC = 6
fetch3: IR = 2 and AR = 6
stac instruction
stac1 AR = 7 PC = 7 DR = 0
stac2 AR = 7 PC = 8 DR = 9 TR = 0
stac3 AR = 9
stac4 DR = 255
stac5 M[AR] = 255
Current Data: AC = -1, R = -1, ZCVN = 0001, AR = 9, PC = 8, DR = 255
fetch1: AR = 8 and PC = 8
fetch2: DR = 255 and PC = 9
fetch3: IR = 255 and AR = 9
halt instruction
Current Data: AC = -1, R = -1, ZCVN = 0001, AR = 9, PC = 9, DR = 255
--- Running again ---
 

Carl Stevenson
RSCPU
This program accepts the title of a file from the
user, opens the file, then reads in lines of 
hexadecimal bytes, and executes them in the 
simulated CPU.

Enter the name of the file containing the program: 
You chose: /home/mathcs/turnin/bracken/cs330/test4.1

Initial register values: 
Current Data: AC = 0, R = 0, ZCVN = 0000, AR = 0, PC = 0, DR = 0
	IR = 0, TR = 0

fetch1: AR = 0 and PC = 0
fetch2: DR = 11 and PC = 1
fetch3: IR = 11 and AR = 1
clac instruction
clac1 AC = 0 ZCVN = 1000
Current Data: AC = 0, R = 0, ZCVN = 1000, AR = 1, PC = 1, DR = 11
fetch1: AR = 1 and PC = 1
fetch2: DR = 3 and PC = 2
fetch3: IR = 3 and AR = 2
mvac instruction
mvac1 R = 0
Current Data: AC = 0, R = 0, ZCVN = 1000, AR = 2, PC = 2, DR = 3
fetch1: AR = 2 and PC = 2
fetch2: DR = 12 and PC = 3
fetch3: IR = 12 and AR = 3
and instruction
and1 AC = 0 ZCVN = 1000
Current Data: AC = 0, R = 0, ZCVN = 1000, AR = 3, PC = 3, DR = 12
fetch1: AR = 3 and PC = 3
fetch2: DR = 22 and PC = 4
fetch3: IR = 22 and AR = 4
mvi instruction
mvi1 DR = 255 PC = 5 AR = 4
mvi2 AC = -1
Current Data: AC = -1, R = 0, ZCVN = 1000, AR = 4, PC = 5, DR = 255
fetch1: AR = 5 and PC = 5
fetch2: DR = 13 and PC = 6
fetch3: IR = 13 and AR = 6
or operation
or1 AC = -1 ZCVN = 0001
Current Data: AC = -1, R = 0, ZCVN = 0001, AR = 6, PC = 6, DR = 13
fetch1: AR = 6 and PC = 6
fetch2: DR = 3 and PC = 7
fetch3: IR = 3 and AR = 7
mvac instruction
mvac1 R = -1
Current Data: AC = -1, R = -1, ZCVN = 0001, AR = 7, PC = 7, DR = 3
fetch1: AR = 7 and PC = 7
fetch2: DR = 13 and PC = 8
fetch3: IR = 13 and AR = 8
or operation
or1 AC = -1 ZCVN = 0001
Current Data: AC = -1, R = -1, ZCVN = 0001, AR = 8, PC = 8, DR = 13
fetch1: AR = 8 and PC = 8
fetch2: DR = 12 and PC = 9
fetch3: IR = 12 and AR = 9
and instruction
and1 AC = -1 ZCVN = 0001
Current Data: AC = -1, R = -1, ZCVN = 0001, AR = 9, PC = 9, DR = 12
fetch1: AR = 9 and PC = 9
fetch2: DR = 14 and PC = 10
fetch3: IR = 14 and AR = 10
xor operation
xor1 AC = 0 ZCVN = 1000
Current Data: AC = 0, R = -1, ZCVN = 1000, AR = 10, PC = 10, DR = 14
fetch1: AR = 10 and PC = 10
fetch2: DR = 15 and PC = 11
fetch3: IR = 15 and AR = 11
not operation
not1 AC = -1 ZCVN = 0001
Current Data: AC = -1, R = -1, ZCVN = 0001, AR = 11, PC = 11, DR = 15
fetch1: AR = 11 and PC = 11
fetch2: DR = 22 and PC = 12
fetch3: IR = 22 and AR = 12
mvi instruction
mvi1 DR = 128 PC = 13 AR = 12
mvi2 AC = -128
Current Data: AC = -128, R = -1, ZCVN = 0001, AR = 12, PC = 13, DR = 128
fetch1: AR = 13 and PC = 13
fetch2: DR = 15 and PC = 14
fetch3: IR = 15 and AR = 14
not operation
not1 AC = 127 ZCVN = 0000
Current Data: AC = 127, R = -1, ZCVN = 0000, AR = 14, PC = 14, DR = 15
fetch1: AR = 14 and PC = 14
fetch2: DR = 22 and PC = 15
fetch3: IR = 22 and AR = 15
mvi instruction
mvi1 DR = 128 PC = 16 AR = 15
mvi2 AC = -128
Current Data: AC = -128, R = -1, ZCVN = 0000, AR = 15, PC = 16, DR = 128
fetch1: AR = 16 and PC = 16
fetch2: DR = 3 and PC = 17
fetch3: IR = 3 and AR = 17
mvac instruction
mvac1 R = -128
Current Data: AC = -128, R = -128, ZCVN = 0000, AR = 17, PC = 17, DR = 3
fetch1: AR = 17 and PC = 17
fetch2: DR = 22 and PC = 18
fetch3: IR = 22 and AR = 18
mvi instruction
mvi1 DR = 127 PC = 19 AR = 18
mvi2 AC = 127
Current Data: AC = 127, R = -128, ZCVN = 0000, AR = 18, PC = 19, DR = 127
fetch1: AR = 19 and PC = 19
fetch2: DR = 14 and PC = 20
fetch3: IR = 14 and AR = 20
xor operation
xor1 AC = -1 ZCVN = 0001
Current Data: AC = -1, R = -128, ZCVN = 0001, AR = 20, PC = 20, DR = 14
fetch1: AR = 20 and PC = 20
fetch2: DR = 22 and PC = 21
fetch3: IR = 22 and AR = 21
mvi instruction
mvi1 DR = 127 PC = 22 AR = 21
mvi2 AC = 127
Current Data: AC = 127, R = -128, ZCVN = 0001, AR = 21, PC = 22, DR = 127
fetch1: AR = 22 and PC = 22
fetch2: DR = 3 and PC = 23
fetch3: IR = 3 and AR = 23
mvac instruction
mvac1 R = 127
Current Data: AC = 127, R = 127, ZCVN = 0001, AR = 23, PC = 23, DR = 3
fetch1: AR = 23 and PC = 23
fetch2: DR = 12 and PC = 24
fetch3: IR = 12 and AR = 24
and instruction
and1 AC = 127 ZCVN = 0000
Current Data: AC = 127, R = 127, ZCVN = 0000, AR = 24, PC = 24, DR = 12
fetch1: AR = 24 and PC = 24
fetch2: DR = 255 and PC = 25
fetch3: IR = 255 and AR = 25
halt instruction
Current Data: AC = 127, R = 127, ZCVN = 0000, AR = 25, PC = 25, DR = 255
